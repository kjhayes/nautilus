
export

include $(SCRIPTS_DIR)/Makefile.include
include $(ROOT_DIR)/.config

# Default rule which will be invoked
#
# Local Makefiles can add dependencies to this rule
# to run more complicated rules
build: builtin.o

include Makefile

#obj-y be set past here

define builtin_rule =

$(1)-subdirs := $$(filter %/,$$($(1)))
$(1)-objects := $$(filter-out %/,$$($(1)))
$(1)-cmds := $$(patsubst %.o,.%.cmd,$$($(1)-objects))
$(1)-builtins := $$(patsubst %/,%/builtin.o,$$($(1)-subdirs))

$$(foreach CMD,$$($(1)-cmds),$$(eval include $$(CMD)))
$(2): $$($(1)-objects) $$($(1)-builtins)
	$$(call quiet-cmd,LD,$$(call rel-file, $$@, $(ROOT_DIR)))
	$$(Q)$$(LD) $$(LDFLAGS) -r \
		$$(sort $$(wildcard $$($(1)-builtins)) \
		$$(wildcard $$($(1)-objects)) \
		/dev/null) \
		-o $$@

endef

$(eval $(call builtin_rule,obj-y,builtin.o))

# Always recurse into subdirs
%/builtin.o: FORCE
	$(call quiet-cmd,MAKE,$(call rel-dir, $@, $(ROOT_DIR)))
	$(Q)$(MAKE) -C $(@D) -f $(SCRIPTS_DIR)/Makefile.build build

%.o: %.c $(AUTOCONF)
	$(call quiet-cmd,CC,$@)
	$(Q)$(CC) $(CFLAGS) -c $(call abs-file, $<) -o $@
%.o: %.S $(AUTOCONF)
	$(call quiet-cmd,CC,$@)
	$(Q)$(CC) $(AFLAGS) -c $(call abs-file, $<) -o $@

.%.cmd: %.c $(AUTOCONF)
	$(call quiet-cmd,DEP,$@)
	$(Q)$(CC) $(CPPFLAGS) -MM -MG $(call abs-file, $<) -MF $@
.%.cmd: %.S $(AUTOCONF)
	$(call quiet-cmd,DEP,$@)
	$(Q)$(CC) $(CPPFLAGS) -MM -MG $(call abs-file, $<) -MF $@

FORCE:

.PHONY: builtin

